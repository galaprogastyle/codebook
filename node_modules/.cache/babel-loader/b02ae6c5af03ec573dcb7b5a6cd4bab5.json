{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\GalaprogaStyle\\\\Desktop\\\\CODEBOOK\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\GalaprogaStyle\\\\Desktop\\\\CODEBOOK\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport connect from \"@vkontakte/vk-connect\";\nimport View from \"@vkontakte/vkui/dist/components/View/View\";\nimport ScreenSpinner from \"@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner\";\nimport \"@vkontakte/vkui/dist/vkui.css\";\nimport Home from \"./panels/Home\";\nimport Html from \"./panels/Html\";\nimport Css from \"./panels/Css\";\nimport Persik from \"./panels/Persik\";\nimport Tags from \"./panels/Tags\";\n\nconst App = () => {\n  const _useState = useState(\"html\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        activePanel = _useState2[0],\n        setActivePanel = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        fetchedUser = _useState4[0],\n        setUser = _useState4[1];\n\n  const _useState5 = useState(React.createElement(ScreenSpinner, {\n    size: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  })),\n        _useState6 = _slicedToArray(_useState5, 2),\n        popout = _useState6[0],\n        setPopout = _useState6[1];\n\n  useEffect(() => {\n    connect.subscribe(({\n      detail: {\n        type,\n        data\n      }\n    }) => {\n      if (type === \"VKWebAppUpdateConfig\") {\n        const schemeAttribute = document.createAttribute(\"scheme\");\n        schemeAttribute.value = data.scheme ? data.scheme : \"client_light\";\n        document.body.attributes.setNamedItem(schemeAttribute);\n      }\n    });\n\n    async function fetchData() {\n      const user = await connect.sendPromise(\"VKWebAppGetUserInfo\");\n      setUser(user);\n      setPopout(null);\n    }\n\n    fetchData();\n  }, []);\n\n  const go = e => {\n    setActivePanel(e.currentTarget.dataset.to);\n  };\n\n  return React.createElement(View, {\n    activePanel: activePanel,\n    popout: popout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Home, {\n    id: \"home\",\n    fetchedUser: fetchedUser,\n    go: go,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(Persik, {\n    id: \"persik\",\n    go: go,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(Html, {\n    id: \"html\",\n    go: go,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(Css, {\n    id: \"css\",\n    go: go,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(Tags, {\n    id: \"tags\",\n    go: go,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/GalaprogaStyle/Desktop/CODEBOOK/src/App.js"],"names":["React","useState","useEffect","connect","View","ScreenSpinner","Home","Html","Css","Persik","Tags","App","activePanel","setActivePanel","fetchedUser","setUser","popout","setPopout","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","user","sendPromise","go","e","currentTarget","dataset","to"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport connect from \"@vkontakte/vk-connect\";\nimport View from \"@vkontakte/vkui/dist/components/View/View\";\nimport ScreenSpinner from \"@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner\";\nimport \"@vkontakte/vkui/dist/vkui.css\";\n\nimport Home from \"./panels/Home\";\nimport Html from \"./panels/Html\";\nimport Css from \"./panels/Css\";\nimport Persik from \"./panels/Persik\";\n\nimport Tags from \"./panels/Tags\";\nconst App = () => {\n  const [activePanel, setActivePanel] = useState(\"html\");\n  const [fetchedUser, setUser] = useState(null);\n  const [popout, setPopout] = useState(<ScreenSpinner size=\"large\" />);\n\n  useEffect(() => {\n    connect.subscribe(({ detail: { type, data } }) => {\n      if (type === \"VKWebAppUpdateConfig\") {\n        const schemeAttribute = document.createAttribute(\"scheme\");\n        schemeAttribute.value = data.scheme ? data.scheme : \"client_light\";\n        document.body.attributes.setNamedItem(schemeAttribute);\n      }\n    });\n    async function fetchData() {\n      const user = await connect.sendPromise(\"VKWebAppGetUserInfo\");\n      setUser(user);\n      setPopout(null);\n    }\n    fetchData();\n  }, []);\n\n  const go = e => {\n    setActivePanel(e.currentTarget.dataset.to);\n  };\n\n  return (\n    <View activePanel={activePanel} popout={popout}>\n      <Home id=\"home\" fetchedUser={fetchedUser} go={go} />\n      <Persik id=\"persik\" go={go} />\n      <Html id=\"html\" go={go} />\n      <Css id=\"css\" go={go} />\n      <Tags id=\"tags\" go={go} />\n    </View>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}